#include <algorithm>
#include <iostream>
#include <vector>
#include <map>
#include <string>
#include <set>

using std::cout;
using std::cin;
using std::string;

struct sub {
    string name;
    int number;
};

bool compare_entry(const sub & sub1, const sub & sub2) {
    if (sub1.number != sub2.number) {
        return sub1.number > sub2.number;
    }
    return sub1.name < sub2.name;
}

int main() {
    int N, M, number;
    string name, subject;
    std::map<string, std::set<string>> result;
    std::map<string, int> subjects;
    std::vector<string> students;
    std::vector<sub> print;
    cin >> N;
    for (int i = 0; i < N; i++) {
        cin >> subject;
        cin >> number;
        subjects[subject] = number;
    }
    cin >> M;
    for (int i = 0; i < M; i++) {
        cin >> name;
        cin >> subject;
        cin >> number;
        std::set<string> curr;
        int j = 0;
        if (result.find(name) != result.end()) {
            curr = result[name];
            j = 1;
        }
        if (subjects.find(subject) != subjects.end()) {
            if (subjects.at(subject) <= number) {
                curr.insert(subject);
            }
        }
        if (j == 0) {
            students.push_back(name);
        }
        result[name] = curr;
    }

    for (int i = 0; i < students.size(); i++) {
        sub stud;
        stud.name = students[i];
        stud.number = result[students[i]].size();
        print.push_back(stud);
    }
    std::sort(print.begin(), print.end(), compare_entry);
    for (int i = 0; i < print.size(); i++) {
        cout << print[i].name << ' ' << print[i].number << '\n';
    }
}